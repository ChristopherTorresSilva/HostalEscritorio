/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import clases.main;
import com.google.gson.Gson;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONObject;

/**
 *
 * @author Chris
 */
public class ordenDePedido extends javax.swing.JInternalFrame {

    Object[] usuariosData;
    Object[] proveedoresData;
    Object[] productosData;
    Gson gson = new Gson();
    /**
     * Creates new form ordenDePedido
     */
    public ordenDePedido() {
        initComponents();
        llenarCombo();
    }
    private void llenarCombo(){
        main _main = new main();
        String usuarios = _main.listaUsuarios();
        usuariosData = gson.fromJson(usuarios, Object[].class);
        
        for (int i = 0; i < usuariosData.length; i++){
            String usuario = gson.toJson(usuariosData[i]);
            JSONObject jsonObject = new JSONObject(usuario);
            comboEmpleado.addItem(jsonObject.get("USERNAME").toString());
        }
        
        String proveedores = _main.listaProveedores();
        proveedoresData = gson.fromJson(proveedores, Object[].class);
        
        for (int i = 0; i < proveedoresData.length; i++){
            String proveedor = gson.toJson(proveedoresData[i]);
            JSONObject jsonObject = new JSONObject(proveedor);
            comboProveedor.addItem(jsonObject.get("NOMBRE").toString());
        }
        
        String productos = _main.listaProductos();
        productosData = gson.fromJson(productos, Object[].class);
        
        for (int i = 0; i < productosData.length; i++){
            String producto = gson.toJson(productosData[i]);
            JSONObject jsonObject = new JSONObject(producto);
            comboProducto.addItem(jsonObject.get("NOMBRE").toString());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboEmpleado = new javax.swing.JComboBox();
        comboProveedor = new javax.swing.JComboBox();
        comboProducto = new javax.swing.JComboBox();
        txtCantidad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();

        setTitle("Orden de Pedido");

        jLabel1.setText("Empleado");

        jLabel2.setText("Proveedor");

        jLabel3.setText("Producto");

        jLabel4.setText("Cantidad");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(comboProveedor, 0, 128, Short.MAX_VALUE)
                    .addComponent(comboEmpleado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCantidad))
                .addGap(48, 48, 48))
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(btnAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(comboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(33, 33, 33)
                                .addComponent(comboProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(26, 26, 26)
                        .addComponent(comboProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(btnAceptar)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
       Object[] empleadoSelec = comboEmpleado.getSelectedObjects();
       Object[] productoSelec = comboProducto.getSelectedObjects();
       Object[] proveedorSelec = comboProveedor.getSelectedObjects();
       //productosData
          //     proveedoresData
        System.out.println("Hola");
       int usuarioId = 0;
       int productoId = 0;
       int proveedorId = 0;
       int precio = 0;
       int cantidad = Integer.parseInt(txtCantidad.getText());
        for (int i = 0; i < usuariosData.length; i++){
            String usuario = gson.toJson(usuariosData[i]);
            JSONObject jsonObject = new JSONObject(usuario);
            if (empleadoSelec[0].toString().equals(jsonObject.get("NOMBRE").toString())){
                usuarioId = new Double(jsonObject.get("ID").toString()).intValue();
            }
        }
        
        for (int i = 0; i < productosData.length; i++){
            String producto = gson.toJson(productosData[i]);
            JSONObject jsonObject = new JSONObject(producto);
            System.out.println(jsonObject);
            System.out.println(jsonObject.get("NOMBRE").toString());
            if (productoSelec[0].toString().equals(jsonObject.get("NOMBRE").toString())){
                productoId = new Double(jsonObject.get("ID").toString()).intValue();
                precio = new Double(jsonObject.get("PRECIO").toString()).intValue();
            }
        }
        
         for (int i = 0; i < proveedoresData.length; i++){
            String proveedor = gson.toJson(proveedoresData[i]);
            JSONObject jsonObject = new JSONObject(proveedor);
            if (proveedorSelec[0].toString().equals(jsonObject.get("NOMBRE").toString())){
                proveedorId = new Double(jsonObject.get("ID").toString()).intValue();
            }
        }
         
         int total = precio * cantidad;
         main _main = new main();
         
         boolean _resp = main.createOrdenPedido(cantidad, total, usuarioId, proveedorId, productoId);
         
         if(!_resp){
            JOptionPane.showMessageDialog(rootPane, "Error al Registrar la orden");
            return;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Orden de pedido Realizada");
            return;
        }
    }//GEN-LAST:event_btnAceptarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JComboBox comboEmpleado;
    private javax.swing.JComboBox comboProducto;
    private javax.swing.JComboBox comboProveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
